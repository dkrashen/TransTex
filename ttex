#!/usr/local/bin/python

import os, sys, yaml, jinja2

def processargs(args):
    if (len(args) != 4):
        print "incorrect number of arguments. command format:"
        print args[0], \
            "<template filename> <data filename> <output filename>"
        sys.exit()
    else: 
        template_filename = args[1]
        data_filename = args[2]
        output_filename = args[3]
    if (not (os.path.isfile(template_filename))):
        print "template file", template_filename, "not found."
        sys.exit()
    elif (not (os.path.isfile(data_filename))):
        print "data file", data_filename, "not found."
        sys.exit()
    return (template_filename, data_filename, output_filename)

def ttenv():
    templateLoader = jinja2.FileSystemLoader( searchpath="" )
    env = jinja2.Environment(
        loader=templateLoader, 
        trim_blocks=True,
        lstrip_blocks=True,
        variable_start_string='\\ttvar{',
        variable_end_string='}',
        block_start_string='\\ttblock{',
        block_end_string='}',
        comment_start_string='\\ttcomment{',
        comment_end_string='}')
    return env

def getdata(data_filename):
    data = yaml.load(open(data_filename), Loader=yaml.Loader)
    return data

def gettemplate(template_filename):
    j_env = ttenv()
    template = j_env.get_template(template_filename)
    return template

(template_filename, data_filename, output_filename) = \
    processargs(sys.argv)

data = getdata(data_filename)
template = gettemplate(template_filename)

out_f = open(output_filename, 'w')
out_f.write(template.render(data=data))

